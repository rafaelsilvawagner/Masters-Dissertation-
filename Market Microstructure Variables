library(GetHFData)
library(plyr)
library(dplyr)
library(lubridate)
library(chron)
library(orderbook)
library(obAnalytics)
library(tictoc)
library(data.table)

#define the inputs for the assets
#define that i want the stock VALE 5 in a dataframe separated by 5 minutes
asset="VALE5"
time="5 min"
type.market="equity"
#the negotiation starts at 10:00:00 and ends at 17:00:00
first.time <- '10:00:00'
last.time <- '18:00:00'
#get all available dates in Bovespa ftp for the equity market
contents<-ghfd_get_ftp_contents(type.market="equity")
#Define the period of your data.frame i want 50 trading days
last.date<-tail(contents$dates,1)
first.date<-contents$dates[nrow(contents)-90]

#micro_vars<-function(asset,time,first.time,last.time,last.date,first.date){
  
#  return(final_product)
  contents<-ghfd_get_ftp_contents(type.market="equity")
  number_of_rounds<-which(contents$dates == last.date)-which(contents$dates == first.date)
  dates<-contents$dates[which(contents$dates == last.date):which(contents$dates == first.date)]
  h<-0
  round=1
  for(round in 1:number_of_rounds) {
    date<-dates[round]
     #Get trades data by raw
    if(file.exists(sprintf("H://treated_variables//times and trades//agg//%s//%s//%s.csv",time,asset,date))){
      trades_agg <- read.csv(sprintf("H://treated_variables//times and trades//agg//%s//%s//%s.csv",time,asset,date),header=TRUE)
      trades_agg<- trades_agg[1:nrow(trades_agg)-1,2:ncol(trades_agg)]
    } else {trades_agg<-ghfd_get_HF_data(my.assets=asset,type.market=type.market,type.data="trades",
            first.date=date,last.date=date,type.output="agg",agg.diff = time,
            first.time =first.time,last.time =last.time,
            dl.dir = "H://ftp.bmf.com.br//MarketData//Bovespa-Vista")
            write.csv(trades_agg,sprintf("H://treated_variables//times and trades//agg//%s//%s//%s.csv",time,asset,date))
    }
    
    #Get trades data aggregated
    if(file.exists(sprintf("H://treated_variables//times and trades//raw//%s//%s//%s.csv",time,asset,date))){
      trades_raw <- read.csv(sprintf("H://treated_variables//times and trades//raw//%s//%s//%s.csv",time,asset,date))
      trades_raw<-trades_raw[,2:ncol(trades_raw)]
    } else {trades_raw<-ghfd_get_HF_data(my.assets=asset,type.market=type.market,type.data="trades",
            first.date=date,last.date=date,type.output="raw",agg.diff = time,
            first.time =first.time,last.time =last.time,
            dl.dir = "H://ftp.bmf.com.br//MarketData//Bovespa-Vista")
            write.csv(trades_raw,sprintf("H://treated_variables//times and trades//raw//%s//%s//%s.csv",time,asset,date))
    }
    
    #transform the dates in trades_raw
    trades_raw$Tradetime<-chron(times=trades_raw$Tradetime)
    trades_agg$Tradetime<-chron(times=trades_agg$Tradetime)
    
    #make some new variables
    #make  vol buy
    trades_agg[,ncol(trades_agg)+1]=integer()
    names(trades_agg)[ncol(trades_agg)]<-"vol.buy"
    
    for (h in 1:(nrow(trades_agg)-1)){
      trades_agg[h,ncol(trades_agg)]<-if(nrow(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                        Tradetime<trades_agg$Tradetime[h+1])["TradedQuantity"])>0 ){
        
                                        sum(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                        Tradetime<trades_agg$Tradetime[h+1])["TradedQuantity"])
                                        
                                        }else{0}
    }
    
    trades_agg[nrow(trades_agg),ncol(trades_agg)]<-if(nrow((subset(trades_raw, TradeSign==1 & 
                                                   Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]))["TradedQuantity"]))==0 |
                                                   nrow(subset(trades_raw, TradeSign==1 & 
                                                   Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                   trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1])
                                                   ["TradedQuantity"]))==0){0}else{
                                                  
                                                   sum(subset(trades_raw, TradeSign==1 & 
                                                   Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]))["TradedQuantity"])-
                                                   sum(subset(trades_raw, TradeSign==1 & 
                                                   Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                   trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))
                                                   ["TradedQuantity"])}
    
    
    
    #make vol sell
    trades_agg[,ncol(trades_agg)+1]=integer()
    names(trades_agg)[ncol(trades_agg)]<-"vol.sell"
    
    for (h in 1:(nrow(trades_agg)-1)){
    trades_agg[h,ncol(trades_agg)]<-if(nrow(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                      Tradetime<trades_agg$Tradetime[h+1])["TradedQuantity"])>0 ){
        
                                      sum(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                      Tradetime<trades_agg$Tradetime[h+1])["TradedQuantity"])
        
                                      }else{0}
    }
    
    trades_agg[nrow(trades_agg),ncol(trades_agg)]<-if(nrow((subset(trades_raw, TradeSign==-1 & 
                                                      Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]))["TradedQuantity"])==0 |
                                                      nrow(subset(trades_raw, TradeSign==-1 & 
                                                      Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                      trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))
                                                      ["TradedQuantity"]))==0){0}else{ 
      
                                                      sum(subset(trades_raw, TradeSign==-1 & 
                                                      Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]))["TradedQuantity"])-
                                                      sum(subset(trades_raw, TradeSign==-1 & 
                                                      Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                      trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))
                                                      ["TradedQuantity"])} 
    #make vwap buy
    trades_agg[,ncol(trades_agg)+1]=integer()
    names(trades_agg)[ncol(trades_agg)]<-"vwap.buy"
    
    for (h in 1:(nrow(trades_agg)-1)){
      trades_agg[h,ncol(trades_agg)]<- if(nrow(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                          Tradetime<trades_agg$Tradetime[h+1])["TradedQuantity"]*
                                          subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                          Tradetime<trades_agg$Tradetime[h+1])["TradePrice"])>0){
                                            
                                          sum(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                          Tradetime<trades_agg$Tradetime[h+1])["TradedQuantity"]*
                                          subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                          Tradetime<trades_agg$Tradetime[h+1])["TradePrice"])
                                          } else{0}
    }
    
    trades_agg[nrow(trades_agg),ncol(trades_agg)]<-if(nrow(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[nrow(trades_agg)])["TradedQuantity"]*
                                                       subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[nrow(trades_agg)])["TradePrice"])==0 
                                                      |
                                                      nrow(subset(trades_raw, TradeSign==1 & Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                       trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))["TradedQuantity"]*
                                                       subset(trades_raw, TradeSign==1 & Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                       trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))["TradePrice"])==0){
                                                   
                                                      0
                                                     } else {
                                                      sum(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[nrow(trades_agg)])["TradedQuantity"]*
                                                      subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[nrow(trades_agg)])["TradePrice"])-
                                                      sum(subset(trades_raw, TradeSign==1 & Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                      trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))["TradedQuantity"]*
                                                      subset(trades_raw, TradeSign==1 & Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                      trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))["TradePrice"])
                                                     }
    
    #make vwap sell
    trades_agg[,ncol(trades_agg)+1]=integer()
    names(trades_agg)[ncol(trades_agg)]<-"vwap.sell"
    
    for (h in 1:(nrow(trades_agg)-1)){
      trades_agg[h,ncol(trades_agg)]<- if(nrow(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                       Tradetime<trades_agg$Tradetime[h+1])["TradedQuantity"]*
                                       subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                       Tradetime<trades_agg$Tradetime[h+1])["TradePrice"])>0){
      
                                       sum(subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                       Tradetime<trades_agg$Tradetime[h+1])["TradedQuantity"]*
                                       subset(trades_raw, TradeSign==1 & Tradetime>trades_agg$Tradetime[h] & 
                                       Tradetime<trades_agg$Tradetime[h+1])["TradePrice"])
                                       } else{0}
                                     }

    trades_agg[nrow(trades_agg),ncol(trades_agg)]<-if(nrow(subset(trades_raw, TradeSign==-1 & Tradetime>trades_agg$Tradetime[nrow(trades_agg)])["TradedQuantity"]*
                                                       subset(trades_raw, TradeSign==-1 & Tradetime>trades_agg$Tradetime[nrow(trades_agg)])["TradePrice"])==0 
                                                      |
                                                      nrow(subset(trades_raw, TradeSign==-1 & Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                        trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))["TradedQuantity"]*
                                                        subset(trades_raw, TradeSign==-1 & Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                        trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))["TradePrice"])==0){
  
                                                      0
                                                   } else {
                                                     sum(subset(trades_raw, TradeSign==-1 & Tradetime>trades_agg$Tradetime[nrow(trades_agg)])["TradedQuantity"]*
                                                     subset(trades_raw, TradeSign==-1 & Tradetime>trades_agg$Tradetime[nrow(trades_agg)])["TradePrice"])-
                                                     sum(subset(trades_raw, TradeSign==-1 & Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                     trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))["TradedQuantity"]*
                                                     subset(trades_raw, TradeSign==-1 & Tradetime>(trades_agg$Tradetime[nrow(trades_agg)]+
                                                     trades_agg$Tradetime[nrow(trades_agg)]-trades_agg$Tradetime[nrow(trades_agg)-1]))["TradePrice"])
                                                   }
    trades_agg$TradeDateTime<-as.POSIXct(trades_agg$TradeDateTime,format='%Y-%m-%d %H:%M:%S')
    #get BOOK !!!!
    
    
    #Get trades data by raw
    #book_raw<-ghfd_get_HF_data(my.assets=assets,type.market="equity",type.data="orders",
    #                             first.date=last.date,last.date=last.date,type.output="raw",
    #                             first.time ="09:00:00",last.time ="18:00:00" )
    
    
    #Get book data aggregated
    if(file.exists(sprintf("H://treated_variables//book//agg//%s//%s//%s.csv",time,asset,date))){
      book_agg <- read.csv(sprintf("H://treated_variables//book//agg//%s//%s//%s.csv",time,asset,date),header=TRUE)
    } else {book_agg<-ghfd_get_HF_data(my.assets=asset,type.market=type.market,type.data="orders",
                      first.date=date,last.date=date,type.output="agg",agg.diff=time,
                      first.time =first.time,last.time =last.time,
                      dl.dir = "H://ftp.bmf.com.br//MarketData//Bovespa-Vista")
            write.csv(book_agg,sprintf("H://treated_variables//book//agg//%s//%s//%s.csv",time,asset,date))
    }
    
    #Get lob
    #df.lob <- ghfd_build_lob(ghfd_get_HF_data(my.assets =assets, 
    #                                          type.data= 'orders',
    #                                          type.matching = 'partial',
    #                                          type.market = "equity",
    #                                          first.date = last.date,
    #                                          last.date = last.date,
    #                                          first.time = '10:00:00',
    #                                          last.time = '17:00:00',
    #                                          type.output = 'raw'
    #)
    date_trades<-trades_agg$Tradetime
    date_trades<-chron(times=date_trades)
    date_book<-book_agg$OrderDatetime
    date_book<-format(strptime(date_book,"%Y-%m-%d %H:%M:%S"),'%H:%M:%S')
    date_book<-chron(times=date_book)
    
    book_agg<-cbind(book_agg[1:(nrow(book_agg)/2),],
                    book_agg[((nrow(book_agg)/2)+1):nrow(book_agg),])
    book_agg<-book_agg[,c(5,6,7,8,10,11,12,17,18,19,20,22,23,24)]
    names(book_agg)[1:14]<-c("n.order.buy", "avg.order.price.buy","max.order.price.buy",
                                 "min.order.price.buy","n.new.order.buy","n.update.order.buy",
                                 "n.cancelled.order.buy",
                                 "n.order.sell", "avg.order.price.sell","max.order.price.sell",
                                 "min.order.price.sell","n.new.order.sell","n.update.order.sell",
                                 "n.cancelled.order.sell")
    
    

    
    index<-match(date_trades,date_book)
    book_agg<-book_agg[index,]
    
    book_agg$n.order.buy<-as.numeric(book_agg$n.order.buy)
    book_agg$n.new.order.buy<-as.numeric(book_agg$n.new.order.buy)
    book_agg$n.order.sell<-as.numeric(book_agg$n.order.sell)
    book_agg$avg.order.price.sell<-as.numeric(book_agg$avg.order.price.sell)
    book_agg$n.update.order.sell<-as.numeric(book_agg$n.update.order.sell)
    
    if (exists("final_product")) {
      final_product<-rbind(final_product,cbind(trades_agg,book_agg[,4:ncol(book_agg)]))
    } else {
      final_product<-cbind(trades_agg,book_agg[,4:ncol(book_agg)])
    }
    rm(trades_raw)
    rm(trades_agg)
    rm(book_agg)
}


